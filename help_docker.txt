/////////////////////////////////////////////////////////////////////////////////
//                                 HELP.TXT                                    //
/////////////////////////////////////////////////////////////////////////////////

* Les points essentiels:

-> Ne pas oublier d'ajouter dans /etc/hosts de votre machine la ligne ( cela permet de créer un alias de localhost pour votre domain_name. )
```
127.0.0.1 ${DOMAIN_NAME}
```
-> Ajouter le login en tant que root:
```
usermod -aG docker jlongin
groups					# pour voir
[ quitter la VM et la relancer ]
```
-> Le projet Inception a été réalisé sur Mac & Debian, donc sur les 2 plateformes, ça marche !
-> Pour que le projet fonctionne, vous devez avoir fait :
	- installer `docker compose`.
	- ajouter `127.0.0.1 ${DOMAIN_NAME}` dans /etc/hosts de votre machine.
	- ajouter login dans le groupe root: `usermod -aG docker [login]`
	- définir les variables d'environnement dans le fichier `srcs/.env`
		- `.env` est un fichier caché.
		- les valeurs doivent être collées, ex : `DATABASE_NAME=mariadb`.
	- le ${HOME} de Mac est `Users/votre_user` ; contrairement à Debian où c'est `/home/votre_user`

* Pour comparer 2 dossiers :
```
diff -rq dossier1 dossier2
```

//	Pour copier facilement dans ma VM sur Debian :

-> Aussi, ce sont toutes les variables d'environnement à compléter pour lancer Inception sur votre machine.

# Mysql
DATABASE_NAME=
MYSQL_USER=
MYSQL_PASSWORD=
MYSQL_HOSTNAME=

# Ssl
SSL_COUNTRY=
SSL_STATE=
SSL_LOCALITY=
SSL_ORGANIZATION=
SSL_ORGANIZATION_UNIT=
SSL_USER_ID=

SSL_CRT=
SSL_KEY=

# Wordpress
DOMAIN_NAME=
WP_TITLE=

WP_ADM_USER=
WP_ADM_PASSWORD=
WP_ADM_EMAIL=

WP_USER=
WP_USER_PASSWORD=
WP_USER_EMAIL=

# Ftp
FTP_USER=
FTP_PASSWORD=

# Others
CONTINENT=

/////////////////////////////////////////////////////////////////////////////////
//                              POUR EVALUATION                                //
/////////////////////////////////////////////////////////////////////////////////

//	À connaître pour l'évaluation :

// Lancer Docker sur Debian (le réinstaller) :
```
for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done

# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
```

// Lancer Docker sur Macos:
```
open -a Docker					# pour le lancer
osascript -e 'quit app "Docker"'		# pour quitter
```

// Connexion sans TLS avec curl:
```
curl http://localhost
```

// Connexion avec TLS avec curl:
```
curl -k -I https://${DOMAIN_NAME}
curl -k -I https://localhost
```
ps : Dans Inception, le domain name doit s'appeler quelque chose comme ; login.42.fr

// Montre les utilisateurs de la base de données MariaDB :
```
docker exec -it mariadb bash
mysql -u root -p
SHOW DATABASES;
USE [NAME];
SELECT ID, user_login, user_email FROM wp_users;
```

// Montre les utilisateurs de Wordpress :
```
docker exec -it wordpress bash
wp user list --allow-root
```

// Pour tester les autres ports:
```
curl -k -I https://localhost:443
curl -k -I https://localhost:123
```

// Se connecter en public:
-> Trouver l'IP de la machine hôte qui servira de serveur (oui ce n'est pas le docker-compose mais bien le hardware qu'on cherche.)
```
curl ifconfig.me	-> public
ifconfig		-> local ( cherche en0 -> inet ipv4 )
```

// Accéder à Adminer :
```
https://${DOMAIN_NAME}/adminer/
Server : ${MYSQL_HOSTNAME}
Username: ${MYSQL_USERNAME}
Password: ${MYSQL_PASSWORD}
Database: ${DATABASE_NAME}
```

// Accéder à Wordpress-Admin :
```
https://${DOMAIN_NAME}/wp-admin
Login: ${WP_USER}
Password: ${WP_USER_PASSWORD}
```

// Accéder à ftp :
```
lftp -u ${FTP_USER},${FTP_PASSWORD} ftp://127.0.0.1
ftp > ls
```
-> ajouter un fichier sur le site :
```
curl --ftp-create-dirs -T ./mon_fichier.txt \
     ftp://${FTP_USER}:${FTP_PASSWORD}@${DOMAIN_NAME}/www/mon_fichier.txt
```
-> récupérer un fichier sur le site :
```
curl -k -O https://${DOMAIN_NAME}/mon_fichier.txt
curl -k -o [autre_nom] https://${DOMAIN_NAME}/mon_fichier.txt
```
avec ftp:
```
curl -u ${FTP_USER}:${FTP_PASSWORD} -O ftp://${DOMAIN_NAME}/mon_fichier.txt
```

* Pour reprendre un transfert interrompu :
```
-C -
```

* Une backup de MariaDB est faite toutes les heures. Pour changer en minute, il faut changer dans backup-cron :
```
0 * * ... --> * * * ...
```
* Mes backups sont compressés, pour les décompresser il faut écrire :
```
tar -xf [backup_name].tar.gz
tar -tf [backup_name].tar.gz	# voir les fichiers sans décompresser
```

// Attention : les volumes sur Linux sont dans `/home/login/data` mais sur Mac c'est différent et ils sont dans `/Users/login/data`.

/////////////////////////////////////////////////////////////////////////////////
//                                     EOF                                     //
/////////////////////////////////////////////////////////////////////////////////

* Merci au logiciel Mobirise qui m'a permis de créer un site static en html/css/js visuellement.

Modifié 19 Août 2025
